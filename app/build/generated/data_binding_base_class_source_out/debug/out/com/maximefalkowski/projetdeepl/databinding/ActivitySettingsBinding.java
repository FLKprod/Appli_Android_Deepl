// Generated by view binder compiler. Do not edit!
package com.maximefalkowski.projetdeepl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.maximefalkowski.projetdeepl.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backbutton;

  @NonNull
  public final ProgressBar barUtilisation;

  @NonNull
  public final LinearLayout infoskey;

  @NonNull
  public final ImageView logo3;

  @NonNull
  public final EditText saisiekeyDeepl;

  @NonNull
  public final TextView showkey;

  @NonNull
  public final TextView shownbredispo;

  @NonNull
  public final TextView shownbremax;

  @NonNull
  public final TextView shownbreutilised;

  @NonNull
  public final TextView showpourcentage;

  @NonNull
  public final TextView txtutilisationapi;

  @NonNull
  public final Button validebutton;

  private ActivitySettingsBinding(@NonNull ConstraintLayout rootView, @NonNull Button backbutton,
      @NonNull ProgressBar barUtilisation, @NonNull LinearLayout infoskey, @NonNull ImageView logo3,
      @NonNull EditText saisiekeyDeepl, @NonNull TextView showkey, @NonNull TextView shownbredispo,
      @NonNull TextView shownbremax, @NonNull TextView shownbreutilised,
      @NonNull TextView showpourcentage, @NonNull TextView txtutilisationapi,
      @NonNull Button validebutton) {
    this.rootView = rootView;
    this.backbutton = backbutton;
    this.barUtilisation = barUtilisation;
    this.infoskey = infoskey;
    this.logo3 = logo3;
    this.saisiekeyDeepl = saisiekeyDeepl;
    this.showkey = showkey;
    this.shownbredispo = shownbredispo;
    this.shownbremax = shownbremax;
    this.shownbreutilised = shownbreutilised;
    this.showpourcentage = showpourcentage;
    this.txtutilisationapi = txtutilisationapi;
    this.validebutton = validebutton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backbutton;
      Button backbutton = ViewBindings.findChildViewById(rootView, id);
      if (backbutton == null) {
        break missingId;
      }

      id = R.id.barUtilisation;
      ProgressBar barUtilisation = ViewBindings.findChildViewById(rootView, id);
      if (barUtilisation == null) {
        break missingId;
      }

      id = R.id.infoskey;
      LinearLayout infoskey = ViewBindings.findChildViewById(rootView, id);
      if (infoskey == null) {
        break missingId;
      }

      id = R.id.logo3;
      ImageView logo3 = ViewBindings.findChildViewById(rootView, id);
      if (logo3 == null) {
        break missingId;
      }

      id = R.id.saisiekeyDeepl;
      EditText saisiekeyDeepl = ViewBindings.findChildViewById(rootView, id);
      if (saisiekeyDeepl == null) {
        break missingId;
      }

      id = R.id.showkey;
      TextView showkey = ViewBindings.findChildViewById(rootView, id);
      if (showkey == null) {
        break missingId;
      }

      id = R.id.shownbredispo;
      TextView shownbredispo = ViewBindings.findChildViewById(rootView, id);
      if (shownbredispo == null) {
        break missingId;
      }

      id = R.id.shownbremax;
      TextView shownbremax = ViewBindings.findChildViewById(rootView, id);
      if (shownbremax == null) {
        break missingId;
      }

      id = R.id.shownbreutilised;
      TextView shownbreutilised = ViewBindings.findChildViewById(rootView, id);
      if (shownbreutilised == null) {
        break missingId;
      }

      id = R.id.showpourcentage;
      TextView showpourcentage = ViewBindings.findChildViewById(rootView, id);
      if (showpourcentage == null) {
        break missingId;
      }

      id = R.id.txtutilisationapi;
      TextView txtutilisationapi = ViewBindings.findChildViewById(rootView, id);
      if (txtutilisationapi == null) {
        break missingId;
      }

      id = R.id.validebutton;
      Button validebutton = ViewBindings.findChildViewById(rootView, id);
      if (validebutton == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ConstraintLayout) rootView, backbutton, barUtilisation,
          infoskey, logo3, saisiekeyDeepl, showkey, shownbredispo, shownbremax, shownbreutilised,
          showpourcentage, txtutilisationapi, validebutton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
